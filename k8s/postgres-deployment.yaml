apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      volumes: # This is where the volume config is linked to the deployment, we only do storage allocation here
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          volumeMounts: # This is where we tell the container to store its data
            - name: postgres-storage # This name matches the name we defined above
              mountPath: /var/lib/postgresql/data # Designate where inside the container this storage should be made available. Anything stored in this path will be actually stored in the volume.
              subPath: postgres # Allow the mount to be further on a subpath
          env: # This is to let the postgres container know what is the correct secret to get access to it. You can consider this module as to set up a password for the container
            - name: POSTGRES_PASSWORD # The env var name to set up
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: PGPASSWORD
